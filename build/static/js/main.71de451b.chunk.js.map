{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/DestaqueMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFecth","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listWidth","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","DestaqueMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substr","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","Header","dark","App","MovieList","setMovieList","DestaqueMovieDatata","setDestaqueMovieDatata","DarkHeader","setDarkHeader","useEffect","Tmdb","list","originals","filter","img","radonMovie","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","movie","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71de451b.chunk.js","sourcesContent":["const API_KEY = \"c8971c60595a9dcce1435b8b6fc51150\";\r\nconst API_BASE = \"https://api.themoviedb.org/3\";\r\n\r\n/*\r\n- originais da netflix\r\n- RECOMENDADOS (trending)\r\n- mais em alta (top rated)\r\n- ação\r\n- comédia\r\n- terror\r\n- romance\r\n- documentários\r\n*/\r\n\r\nconst basicFecth = async (endpoint) => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`);\r\n  const json = await req.json();\r\n\r\n  return json;\r\n};\r\n\r\nexport default {\r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: \"originals\",\r\n        title: \"Originais do Netflix\",\r\n        items: await basicFecth(\r\n          `/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"trending\",\r\n        title: \"Recomendados para Você\",\r\n        items: await basicFecth(\r\n          `/trending/all/week?language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"toprated\",\r\n        title: \"Em Alta\",\r\n        items: await basicFecth(\r\n          `/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"action\",\r\n        title: \"Ação\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"comedy\",\r\n        title: \"Comédia\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"horror\",\r\n        title: \"Terror\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"romance\",\r\n        title: \"Romance\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n      {\r\n        slug: \"documentary\",\r\n        title: \"Documentários\",\r\n        items: await basicFecth(\r\n          `/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`\r\n        ),\r\n      },\r\n    ];\r\n  },\r\n\r\n  getMovieInfo: async (movieId, type) => {\r\n    let info = {};\r\n\r\n    if (movieId) {\r\n      switch (type) {\r\n        case \"movie\":\r\n          info = await basicFecth(\r\n            `/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`\r\n          );\r\n          break;\r\n        case \"tv\":\r\n          info = await basicFecth(\r\n            `/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`\r\n          );\r\n          break;\r\n        default:\r\n          info = null;\r\n      }\r\n    }\r\n    return info;\r\n  },\r\n};\r\n","import React, {useState}from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport const MovieRow = ({title, items}) => {\r\n\r\n    const [scrollX,setScrollX] = useState(0)\r\n\r\n    const handlerLeftArrow =() => {\r\n        let x = scrollX + Math.round(window.innerWidth /2);\r\n\r\n        if(x >= 0) {\r\n            x = 0\r\n        }\r\n\r\n        setScrollX(x)\r\n    }\r\n    const handlerRightArrow =() => {\r\n        let x = scrollX - Math.round(window.innerWidth /2);\r\n        let listWidth = items.results.length * 150;\r\n\r\n        if((window.innerWidth - listWidth) > x) {\r\n            x = (window.innerWidth - listWidth) - 60;\r\n        }\r\n\r\n        setScrollX(x)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--left\" onClick={handlerLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize: '5rem'}} />\r\n            </div>\r\n            <div className=\"movieRow--right\" onClick={handlerRightArrow}>\r\n                <NavigateNextIcon style={{fontSize: '5rem'}} />\r\n            </div>\r\n\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150,\r\n\r\n                }}>\r\n                {items.results.length > 0 && items.results.map((item, key) => (\r\n                    <div className=\"movieRow--movie\" key={key}>\r\n                        <img src={`https://image.tmdb.org/t/p/w400${item.poster_path}`} alt={item.original_title}/>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './DestaqueMovie.css';\r\n\r\nexport const DestaqueMovie = ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n\r\n    for (let i in item.genres) {\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length > 220) {\r\n        description = description.substr(0,220) + '...';\r\n    }   \r\n\r\n    return (\r\n        <section className=\"Destaque\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'right center',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"Destaque--vertical\">\r\n                <div className=\"Destaque--horizontal\">\r\n                    <div className=\"Destaque--name\">\r\n                        {item.original_name}\r\n                    </div>\r\n                    <div className=\"Destaque--info\">\r\n                        <div className=\"Destaque--points\">{item.vote_average} Pontos</div>\r\n                        <div className=\"Destaque--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"Destaque--seasons\">{item.number_of_seasons} Temporada{item.number_of_seasons != 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"Destaque--description\">\r\n                        {description}\r\n                    </div>\r\n                    <div className=\"Destaque--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"Destaque--btn watchBtn\">▶ Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className=\"Destaque--btn listBtn\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"Destaque--genres\">\r\n                        <strong>Generos: </strong>\r\n                        {genres.join(', ')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport const Header = ({dark}) => {\r\n    return (\r\n        <header className={dark ? 'DarkHeader' : ''}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"logo-header\" />\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/84c20033850498.56ba69ac290ea.png\" alt=\"logo-user\" />\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import React, {useEffect , useState} from 'react';\nimport Tmdb from './Tmdb';\nimport { MovieRow } from './components/MovieRow';\nimport { DestaqueMovie } from './components/DestaqueMovie';\n\nimport './App.css';\nimport { Header } from './components/Header';\n\nfunction App() {\n\n  const [MovieList , setMovieList] = useState([]);\n  const [DestaqueMovieDatata , setDestaqueMovieDatata] = useState(null);\n  const [DarkHeader, setDarkHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list)\n\n      //Pegando o filme em detaque de\n      let originals = list.filter((img) => img.slug === 'originals');\n\n      let radonMovie = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n\n      let chosen = originals[0].items.results[radonMovie];\n\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id,'tv');\n      setDestaqueMovieDatata(chosenInfo)\n    }\n\n    loadAll();\n  },[])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setDarkHeader(true);\n      } else {\n        setDarkHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll',scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll',scrollListener);\n    }\n  },[])\n\n  return (\n    <div className=\"App\">\n      <Header dark={DarkHeader}/>\n\n      {DestaqueMovieDatata  &&\n        <DestaqueMovie item={DestaqueMovieDatata} />\n      }\n\n      <section className=\"list\">\n        {MovieList.map((movie,key) => (\n          <MovieRow key={key} title={movie.title} items={movie.items}/>\n        ))}\n      </section>\n\n      <footer>\n        Feito por <span role=\"Author\" aria-label=\"Author\">Vinicius Virtuoso.</span>\n        <br/>\n        Creditos: <br /><a href=\"https://youtu.be/tBweoUiMsDg\" >Bonieky Lacerda</a> e <a href=\"https://www.themoviedb.org/\" >Themoviedb.org</a>\n      </footer>\n\n      {MovieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"/>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n\n// Header\n//       Destaque\n//       Lista\n//       Footer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}